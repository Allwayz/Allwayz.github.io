<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>武汉加油，中国加油</title>
    <url>/2020/02/11/%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9%EF%BC%8C%E4%B8%AD%E5%9B%BD%E5%8A%A0%E6%B2%B9/</url>
    <content><![CDATA[<blockquote>
<p>  只因国家到了危亡时刻，我辈只能奋不顾身！</p>
</blockquote>
<img src="/2020/02/11/%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9%EF%BC%8C%E4%B8%AD%E5%9B%BD%E5%8A%A0%E6%B2%B9/%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9.png" class="" title="武汉加油">

<a id="more"></a>

<h1 id="直面挑战者-躬身入局者-皆为我辈！"><a href="#直面挑战者-躬身入局者-皆为我辈！" class="headerlink" title="直面挑战者 躬身入局者 皆为我辈！"></a><strong>直面挑战者 躬身入局者 皆为我辈！</strong></h1>]]></content>
      <tags>
        <tag>当时听得懂的</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-Boot-摸索之路-2:MyBatis-Plus</title>
    <url>/2020/02/09/Spring-Boot-%E6%91%B8%E7%B4%A2%E4%B9%8B%E8%B7%AF-2-MyBatis-Plus/</url>
    <content><![CDATA[<blockquote>
<p>  从JPAController到MyBatis-Plus CRUD(增删改查）<br>  从Hibernate到MyBatis</p>
</blockquote>
<a id="more"></a>

<h2 id="对数据库的增删改查操作"><a href="#对数据库的增删改查操作" class="headerlink" title="对数据库的增删改查操作"></a>对数据库的增删改查操作</h2><h4 id="sql语句："><a href="#sql语句：" class="headerlink" title="sql语句："></a>sql语句：</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--增</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name</span><br><span class="line"><span class="keyword">VALUES</span> (value1,value2,value3,...);</span><br><span class="line"></span><br><span class="line"><span class="comment">--删</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> some_column=some_value;</span><br><span class="line"></span><br><span class="line"><span class="comment">--改</span></span><br><span class="line"><span class="keyword">UPDATE</span> table_name</span><br><span class="line"><span class="keyword">SET</span> column1=value1,column2=value2,...</span><br><span class="line"><span class="keyword">WHERE</span> some_column=some_value;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> table_name;</span><br></pre></td></tr></table></figure></div>

<h2 id="这篇博客中的代码环境"><a href="#这篇博客中的代码环境" class="headerlink" title="这篇博客中的代码环境"></a>这篇博客中的代码环境</h2><ul>
<li><p>准备MySql数据库，建立数据表user</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span></span><br><span class="line">(</span><br><span class="line">	user_id <span class="built_in">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'ID'</span>,</span><br><span class="line">	user_name <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'name'</span>,</span><br><span class="line">	user_age <span class="built_in">INT</span>(<span class="number">11</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'age'</span>,</span><br><span class="line">	PRIMARY <span class="keyword">KEY</span> (user_id)</span><br><span class="line">) <span class="keyword">charset</span> = utf8;</span><br></pre></td></tr></table></figure></div>

</li>
</ul>
<h2 id="一、传统Java开发中"><a href="#一、传统Java开发中" class="headerlink" title="一、传统Java开发中"></a>一、传统Java开发中</h2><h3 id="1、在没有框架封装这些sql语句的时候"><a href="#1、在没有框架封装这些sql语句的时候" class="headerlink" title="1、在没有框架封装这些sql语句的时候"></a>1、在没有框架封装这些sql语句的时候</h3><ol>
<li><p>在Service层中写CRUD的方法</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> EntityManager em;</span><br><span class="line">   </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 查找所有用户</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Module&gt; <span class="title">findAllUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">       TypedQuery&lt;Module&gt; q = </span><br><span class="line">               em.createQuery(<span class="string">"SELECT u FROM User u"</span>, User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">       <span class="keyword">return</span> q.getResultList();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>在业务代码中调用</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">  EntityManagerFactory emf = Persistence.createEntityManagerFactory(<span class="string">"UserPU"</span>);</span><br><span class="line">  EntityManager em = emf.createEntityManager();</span><br><span class="line">  UserService userService = <span class="keyword">new</span> UserServiceImpl(em);</span><br><span class="line">   </span><br><span class="line"><span class="comment">//调用CRUD方法</span></span><br><span class="line">List&lt;User&gt; userList = userService.findAllUser();</span><br><span class="line">userList..forEach(System.out::println);</span><br></pre></td></tr></table></figure></div>

</li>
</ol>
<h3 id="2、在JPA通过数据库生成代码之后"><a href="#2、在JPA通过数据库生成代码之后" class="headerlink" title="2、在JPA通过数据库生成代码之后"></a>2、在JPA通过数据库生成代码之后</h3><h4 id="对于简单的CRUD操作"><a href="#对于简单的CRUD操作" class="headerlink" title="对于简单的CRUD操作"></a>对于简单的CRUD操作</h4><p>只需要通过<strong>数据库</strong>来自动生成<code>JPAController</code>直接调用<code>JPAController</code>就可以完成简单的CRUD操作</p>
<h4 id="如果需要自定义操作"><a href="#如果需要自定义操作" class="headerlink" title="如果需要自定义操作"></a>如果需要自定义操作</h4><ol>
<li><p>我们需要在实体类中先来<code>@NamedQuery</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NamedQueries</span>(&#123;</span><br><span class="line">    <span class="meta">@NamedQuery</span>(name = <span class="string">"User.findUserByName"</span>, query = <span class="string">"SELECT u FROM user u WHERE name like ?"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>然后在Service层中实现</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Module <span class="title">findUserByName</span><span class="params">(String xxx)</span></span>&#123;</span><br><span class="line">        EntityManager em = getEntityManager();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> em.createNamedQuery(<span class="string">"User.findUserByName"</span>,</span><br><span class="line">                User.class).setParameter("name",xxx).getSingleResult();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            em.close();</span><br><span class="line">        &#125;      </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>最后在业务代码中<code>new</code>一个<code>UserJPAController</code>的对象就可以调用方法了</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">EntityManagerFactory emf = Persistence.createEntityManagerFactory(<span class="string">"UserPU"</span>);</span><br><span class="line">  UserJPAController userJPAController = <span class="keyword">new</span> UserJPAController(emf);</span><br><span class="line"></span><br><span class="line">userJPAController.findUserByName(<span class="string">"Tony"</span>);</span><br></pre></td></tr></table></figure></div>

</li>
</ol>
<h2 id="二、使用了Spring-Boot框架和MyBatis-Plus工具之后"><a href="#二、使用了Spring-Boot框架和MyBatis-Plus工具之后" class="headerlink" title="二、使用了Spring-Boot框架和MyBatis-Plus工具之后"></a>二、使用了Spring-Boot框架和MyBatis-Plus工具之后</h2><p><a href="https://github.com/baomidou/mybatis-plus" target="_blank" rel="noopener">MyBatis-Plus</a>（简称 MP）是一个 <a href="http://www.mybatis.org/mybatis-3/" target="_blank" rel="noopener">MyBatis</a> 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p>
<h3 id="MyBatis-Plus官方文档"><a href="#MyBatis-Plus官方文档" class="headerlink" title="MyBatis-Plus官方文档"></a>MyBatis-Plus官方文档</h3><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><ul>
<li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li>
<li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li>
<li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li>
<li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li>
<li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li>
<li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li>
<li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li>
<li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li>
<li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li>
<li><strong>分页插件支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li>
<li><strong>内置性能分析插件</strong>：可输出 Sql 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li>
<li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li>
</ul>
<h4 id="支持数据库支持数据库"><a href="#支持数据库支持数据库" class="headerlink" title="支持数据库支持数据库"></a>支持数据库支持数据库</h4><ul>
<li>mysql 、 mariadb 、 oracle 、 db2 、 h2 、 hsql 、 sqlite 、 postgresql 、 sqlserver</li>
<li>达梦数据库 、 虚谷数据库 、 人大金仓数据库</li>
</ul>
<h2 id="使用MyBatis-Plus的自动生成工具生成Entity，Mapper，Service和Controller。"><a href="#使用MyBatis-Plus的自动生成工具生成Entity，Mapper，Service和Controller。" class="headerlink" title="使用MyBatis-Plus的自动生成工具生成Entity，Mapper，Service和Controller。"></a>使用MyBatis-Plus的自动生成工具生成<strong>Entity</strong>，<strong>Mapper</strong>，<strong>Service</strong>和<strong>Controller</strong>。</h2><h3 id="创建MyBatis-Plus-Generator工具类MyBatisGenerator"><a href="#创建MyBatis-Plus-Generator工具类MyBatisGenerator" class="headerlink" title="创建MyBatis-Plus Generator工具类MyBatisGenerator"></a>创建MyBatis-Plus Generator工具类<code>MyBatisGenerator</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisGenerator</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 读取控制台内容</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">scanner</span><span class="params">(String tip)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        StringBuilder help = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        help.append(<span class="string">"请输入"</span> + tip + <span class="string">"："</span>);</span><br><span class="line">        System.out.println(help.toString());</span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNext()) &#123;</span><br><span class="line">            String ipt = scanner.next();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotBlank(tip)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ipt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MybatisPlusException(<span class="string">"请输入正确的"</span> + tip + <span class="string">"！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        String projectPath = System.getProperty(<span class="string">"user.dir"</span>);</span><br><span class="line">        gc.setOutputDir(projectPath + <span class="string">"/src/main/java"</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">"YourName"</span>);</span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// gc.setSwagger2(true); 实体属性 Swagger2 注解</span></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据源配置</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">"DatabasePath"</span>);</span><br><span class="line">        <span class="comment">// dsc.setSchemaName("public");</span></span><br><span class="line">        dsc.setDriverName(<span class="string">""</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">"root"</span>);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 包配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setModuleName(scanner(<span class="string">"模块名"</span>));</span><br><span class="line">        pc.setParent(<span class="string">"com.company"</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义配置</span></span><br><span class="line">        InjectionConfig cfg = <span class="keyword">new</span> InjectionConfig() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// to do nothing</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果模板引擎是 freemarker</span></span><br><span class="line">        String templatePath = <span class="string">"/templates/mapper.xml.ftl"</span>;</span><br><span class="line">        <span class="comment">// 如果模板引擎是 velocity</span></span><br><span class="line">        <span class="comment">// String templatePath = "/templates/mapper.xml.vm";</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义输出配置</span></span><br><span class="line">        List&lt;FileOutConfig&gt; focList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 自定义配置会被优先输出</span></span><br><span class="line">        focList.add(<span class="keyword">new</span> FileOutConfig(templatePath) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">outputFile</span><span class="params">(TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 自定义输出文件名 ， 如果你 Entity 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！</span></span><br><span class="line">                <span class="keyword">return</span> projectPath + <span class="string">"/src/main/resources/mapper/"</span> + pc.getModuleName()</span><br><span class="line">                        + <span class="string">"/"</span> + tableInfo.getEntityName() + <span class="string">"Mapper"</span> + StringPool.DOT_XML;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        cfg.setFileCreate(new IFileCreate() &#123;</span></span><br><span class="line"><span class="comment">            @Override</span></span><br><span class="line"><span class="comment">            public boolean isCreate(ConfigBuilder configBuilder, FileType fileType, String filePath) &#123;</span></span><br><span class="line"><span class="comment">                // 判断自定义文件夹是否需要创建</span></span><br><span class="line"><span class="comment">                checkDir("调用默认方法创建的目录");</span></span><br><span class="line"><span class="comment">                return false;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        cfg.setFileOutConfigList(focList);</span><br><span class="line">        mpg.setCfg(cfg);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置模板</span></span><br><span class="line">        TemplateConfig templateConfig = <span class="keyword">new</span> TemplateConfig();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置自定义输出模板</span></span><br><span class="line">        <span class="comment">//指定自定义模板路径，注意不要带上.ftl/.vm, 会根据使用的模板引擎自动识别</span></span><br><span class="line">        <span class="comment">// templateConfig.setEntity("templates/entity2.java");</span></span><br><span class="line">        <span class="comment">// templateConfig.setService();</span></span><br><span class="line">        <span class="comment">// templateConfig.setController();</span></span><br><span class="line"></span><br><span class="line">        templateConfig.setXml(<span class="keyword">null</span>);</span><br><span class="line">        mpg.setTemplate(templateConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 策略配置</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setSuperEntityClass(<span class="string">"你自己的父类实体,没有就不用设置!"</span>);</span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 公共父类</span></span><br><span class="line">        strategy.setSuperControllerClass(<span class="string">"你自己的父类控制器,没有就不用设置!"</span>);</span><br><span class="line">        <span class="comment">// 写于父类中的公共字段</span></span><br><span class="line">        strategy.setSuperEntityColumns(<span class="string">"id"</span>);</span><br><span class="line">        strategy.setInclude(scanner(<span class="string">"表名，多个英文逗号分割"</span>).split(<span class="string">","</span>));</span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">"_"</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line">        mpg.setTemplateEngine(<span class="keyword">new</span> FreemarkerTemplateEngine());</span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li><p>如果Import的时候发现<code>GlobalConfig</code>中的<code>set</code>方法找不到们可以去Import中删除</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.config.GlobalConfig;</span><br></pre></td></tr></table></figure></div>

<h2 id="运行MyBatisGenerator"><a href="#运行MyBatisGenerator" class="headerlink" title="运行MyBatisGenerator"></a>运行<code>MyBatisGenerator</code></h2><ol>
<li>在命令行输入需要自动生成的模块路径</li>
<li>第二行输入数据库的表名，多个字段用<code>逗号</code>隔开。</li>
</ol>
</li>
</ul>
<h2 id="编写MyBatis配置类-MyBatisConfig"><a href="#编写MyBatis配置类-MyBatisConfig" class="headerlink" title="编写MyBatis配置类 MyBatisConfig"></a>编写<strong>MyBatis配置类</strong> <code>MyBatisConfig</code></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">//MapperScan Mapper类的路径</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.company"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisConfig</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="编写测试类"><a href="#编写测试类" class="headerlink" title="编写测试类"></a>编写测试类</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">TestUserServiceImpl</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectAllUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"----------Select All-------------"</span>);</span><br><span class="line">        List&lt;User&gt; userList = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">        userList.forEach(System.out::println);</span><br><span class="line">        System.out.println(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="最后记录个小bug"><a href="#最后记录个小bug" class="headerlink" title="最后记录个小bug"></a>最后记录个小bug</h2><ol>
<li><p>Bug Description</p>
<p>在测试的代码中<code>@Autowired</code>Mapper类时，经常会遇到<code>Could not autowire. No beans of &#39;xxxx&#39; type found</code>的错误提示。但程序的编译和运行都是没有问题的，这个错误提示并不会产生影响。但红色的错误提示在有些有强迫症的程序员眼里，多多少少有些不太舒服。</p>
<img src="/2020/02/09/Spring-Boot-%E6%91%B8%E7%B4%A2%E4%B9%8B%E8%B7%AF-2-MyBatis-Plus/Error.png" class="" title="Error">


</li>
</ol>
<ol start="2">
<li><p>Cause</p>
<p> 原因可能有两个，第一个是<strong>IntellijIDEA</strong>本身工具的问题。第二个便是我们导入<code>@Service</code>包的时候导入包错误造成的</p>
<p>　　第一种原因，spring auto scan配置，在编辑情况下，无法找不到对应的bean，于是提示找不到对应bean的错误。常见于mybatis的mapper，如下：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- mapper scanner configurer --&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;mapperScannerConfig&quot; class&#x3D;&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;basePackage&quot; value&#x3D;&quot;com.adu.spring_test.mybatis.dao&quot; &#x2F;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;sqlSessionFactoryBeanName&quot; value&#x3D;&quot;sqlSessionFactory&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>Solution</p>
<p>针对第一种原因，解决办法是：降低<code>Autowired</code>检测的级别，将<strong>Severity</strong>的级别由之前的<strong>error</strong>改成<strong>warning</strong>或其它可以忽略的级别。</p>
</li>
</ol>
<img src="/2020/02/09/Spring-Boot-%E6%91%B8%E7%B4%A2%E4%B9%8B%E8%B7%AF-2-MyBatis-Plus/Setting.png" class="" title="Preference">


<p>针对第二种原因，解决方案当然是导入正确的包。首先我们来看下最容易导入的错误包，如下所示：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.dubbo.config.annotation.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确的包应该是下面这个</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br></pre></td></tr></table></figure></div>

<p>切记切记啊！！！！</p>
<hr>
<p>Reference<br><a href="https://github.com/Allwayz" target="_blank" rel="noopener">Allwayz</a></p>
]]></content>
      <tags>
        <tag>Spring-Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Mamba Out</title>
    <url>/2020/01/27/Mamba-Out/</url>
    <content><![CDATA[<img src="/2020/01/27/Mamba-Out/Mamba_out.webp" class="" title="再见科比">

<a id="more"></a>

<h1 id="The-17th-times-NBA-All-Stars"><a href="#The-17th-times-NBA-All-Stars" class="headerlink" title="The 17th times NBA All-Stars,"></a>The 17<sup>th</sup> times NBA All-Stars,</h1><h1 id="The-3rd-highest-scpre-in-the-NBA-history"><a href="#The-3rd-highest-scpre-in-the-NBA-history" class="headerlink" title="The 3rd highest scpre in the NBA history"></a>The 3<sup>rd</sup> highest scpre in the NBA history</h1><h1 id="2008-MVP"><a href="#2008-MVP" class="headerlink" title="2008 MVP"></a>2008 MVP</h1><h1 id="Two-times-NBA-Finals-MVPs"><a href="#Two-times-NBA-Finals-MVPs" class="headerlink" title="Two times NBA Finals MVPs"></a>Two times NBA Finals MVPs</h1><h1 id="Five-times-NBA-championships"><a href="#Five-times-NBA-championships" class="headerlink" title="Five times NBA championships,"></a>Five times NBA championships,</h1><h1 id="Six-foot-six-heights-from-Lower-Merion-High-School-1996-Draft"><a href="#Six-foot-six-heights-from-Lower-Merion-High-School-1996-Draft" class="headerlink" title="Six-foot-six heights, from Lower Merion High School, 1996 Draft,"></a>Six-foot-six heights, from Lower Merion High School, 1996 Draft,</h1><h1 id="No-24"><a href="#No-24" class="headerlink" title="No. 24"></a>No. 24</h1><h1 id="Kobe-Bryant"><a href="#Kobe-Bryant" class="headerlink" title="Kobe  Bryant!!!"></a>Kobe  Bryant!!!</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"> ██████   ██████                           █████              </span><br><span class="line">░░██████ ██████                           ░░███               </span><br><span class="line"> ░███░█████░███   ██████   █████████████   ░███████   ██████  </span><br><span class="line"> ░███░░███ ░███  ░░░░░███ ░░███░░███░░███  ░███░░███ ░░░░░███ </span><br><span class="line"> ░███ ░░░  ░███   ███████  ░███ ░███ ░███  ░███ ░███  ███████ </span><br><span class="line"> ░███      ░███  ███░░███  ░███ ░███ ░███  ░███ ░███ ███░░███ </span><br><span class="line"> █████     █████░░████████ █████░███ █████ ████████ ░░████████</span><br><span class="line">░░░░░     ░░░░░  ░░░░░░░░ ░░░░░ ░░░ ░░░░░ ░░░░░░░░   ░░░░░░░░ </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ███████                █████  </span><br><span class="line">  ███░░░░░███             ░░███   </span><br><span class="line"> ███     ░░███ █████ ████ ███████ </span><br><span class="line">░███      ░███░░███ ░███ ░░░███░  </span><br><span class="line">░███      ░███ ░███ ░███   ░███   </span><br><span class="line">░███      ░███ ░███ ░███   ░███   </span><br><span class="line">░░░███████░   ░░████████  ░░█████</span><br><span class="line">  ░░░░░░░      ░░░░░░░░    ░░░░░</span><br></pre></td></tr></table></figure></div>

<p>R.I.P</p>
]]></content>
      <tags>
        <tag>Kobe</tag>
      </tags>
  </entry>
  <entry>
    <title>17岁的好</title>
    <url>/2020/01/27/17%E5%B2%81%E7%9A%84%E5%A5%BD/</url>
    <content><![CDATA[<blockquote>
<p>17岁的好是21岁体会不到，却又心心念念的。<br>就像是一起坐在教室上课的时光，一走就再也回不来了。</p>
</blockquote>
<img src="/2020/01/27/17%E5%B2%81%E7%9A%84%E5%A5%BD/17_img.jpg" class="" title="17岁的好">

<a id="more"></a>



<p>最近看了一部剧叫<strong>我在未来等你</strong>，大概剧情是讲一个37岁还没有结婚的中年大叔，阴差阳错穿越回1998年，遇见17岁的自己，经历一番事情后回到2018年追回自己初恋的故事。</p>
<p>本来是老掉牙的穿越剧本儿，可是看见17岁，我就走不动道儿了。发点想说的话。</p>
<p>现在是2020年，这一年我21岁。我相信在每个人心中都有一个穿越梦，心里都有对过去的遗憾。我最想回去的是我的16岁的夏天。</p>
<p>那年我刚上高中。回到过去，我想要再活一边我的高中生活，并不是我对现在的生活有什么不满意，而是高中对于我来说实在有太多的情感，太深刻的记忆在我脑海中。有美好的记忆，有遗憾的记忆。我希望在回去的时光里，让自己早一点变得优秀，让自己好好珍惜能三十几个人一起坐在教室里的时光。我想告诉他，这段时光很快就过去了，即使以后再能坐在教室里，也不会是现在身边的这些人了。我想让他明白，很多时候不要太在意输赢，不要太在乎面子。想让他明白，你在乎的或者信仰的东西，可能对别人来说一文不值……</p>
<p>想说的太多，可是转念一想，为什么生命中有一段路叫<strong>青春</strong>呢，不就是心中对世界的好奇吗。不就是原以为自己在乎的东西拼一拼的那股劲儿吗。不就是上课吃东西、睡觉、打牌，被抓了一起抗的那群朋友吗。不就是喜欢一个女孩子不敢说的那份懵懂吗。不就是失恋后听啥歌都像专门为自己唱的那种感觉吗。不就是老师不让打球我偏打，学校不让订外卖我偏订的那一份<strong>逆反</strong>吗……</p>
<p>这样看来青春最可贵的东西不是什么都懂，反倒是什么都不懂啊。带着初生牛犊不怕虎的那股劲儿，带着想跟全世界抗衡的那颗心，才是青春年华该有的样子。</p>
<p>我今年21岁了，我真的是感觉我的青春好像过去了。当初上高中玩的最好的那帮朋友还是在我身边，即使没那么长联系，彼此见面也一样是熟悉的感觉。可为什么感觉青春过去了呢？我想是因为这几年过去了，什么都懂了，青春也就没了吧。</p>
<p>现在的我，跟17岁最大的不一样可能是明白了世界上真的有不可改变的东西，明白了什么是人情世故，明白了该给自己的未来打好地基。记得十七岁那年，喜欢的女生想吃炸鸡。好家伙！听到这个消息那就像是上级下的死命令，当时学校也不让带手机，我偷偷用。美团定完之后忘记备注送达时间了，正上着课呢手机就开始镇。我也没办法呀，不接不行啊，我就让快递员换个袋子包好，放门卫室了。下了课就开始到处找老师，找关系好的老师，问他有么有空，帮我个小忙什么的。嗨！现在想想真是想笑当时哪个幼稚的自己。也惊叹当时的我能再学校规章边缘游走，为了达到目的“不择手段”。现在可能喜欢的女生提个什么要求会想前想后，畏手畏脚的吧。</p>
<p>我多么希望无论自己到多大的年龄，我都是那个<strong>可以为那些我在乎的人或事</strong>奋不顾身的少年郎。</p>
<p>再来单说为什么<strong>我在未来等你</strong>这部剧这么吸引我，我再看剧的过程中，虽然年代不同，单是剧情中男生对女生想遮掩却遮不住的感情。跟哥们儿好的像穿一条裤子的感情。对父母老师有逆反，又亲切的感情。还有再青春期孩子们坚强外表下，脆弱而又敏感的心。几乎满足了我对青春的一切回忆。看完这部剧我甚至觉得我又经历了一次青春期的<strong>懵懂</strong>、<strong>迷茫</strong>、<strong>冲动</strong>。</p>
<p>那些在我青春里的人啊，无论是路过的，还是陪伴我一路的。有你们真好。谢谢你们在青春这段时光中陪我走过。</p>
<p>真希望多年之后，我们再回忆起自己的青春，都能有彼此的身影。</p>
<p>#WZX、#大波、#DouDou、#Qiu、#GZY</p>
<img src="/2020/01/27/17%E5%B2%81%E7%9A%84%E5%A5%BD/end.jpg" class="" title="17岁的好">

<img src="/2020/01/27/17%E5%B2%81%E7%9A%84%E5%A5%BD/end2.jpg" class="" title="17岁的好">

<hr>
<p>#referen</p>
<ul>
<li>图片来自 <a href="https://www.iqiyi.com/" target="_blank" rel="noopener">爱奇艺</a></li>
</ul>
]]></content>
      <tags>
        <tag>当时听得懂的</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot 摸索之路-1：连接MySql数据库</title>
    <url>/2020/01/23/Spring-Boot-%E6%91%B8%E7%B4%A2%E4%B9%8B%E8%B7%AF-1%EF%BC%9A%E8%BF%9E%E6%8E%A5MySql%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<blockquote>
<p>关于Spring_Boot框架下如何连接MySql数据库的学习过程</p>
</blockquote>
<a id="more"></a>

<p>[toc]</p>
<h1 id="Spring-Boot-三大特性之：开箱即用"><a href="#Spring-Boot-三大特性之：开箱即用" class="headerlink" title="Spring-Boot 三大特性之：开箱即用"></a>Spring-Boot 三大特性之：开箱即用</h1><h2 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h2><ul>
<li><p><strong>在以前如何连接数据库？</strong></p>
<ul>
<li><p>首先在本地或服务器上建立数据库</p>
</li>
<li><p>进入<strong>IDEA</strong>，如果使用<code>hibernate</code>连接的话导入<strong>hibernate</strong>的jar包，导入<strong>ehcache</strong>的jar包和<strong>logj4</strong>的jar包。</p>
</li>
<li><p>新建<code>hibernate.conf.xml</code></p>
</li>
<li><p>配置一大堆数据库地址，用户名密码之类的标签</p>
</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-configuration PUBLIC</span></span><br><span class="line"><span class="meta">	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Hibernate配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-configuration</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">session-factory</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--配置连接目标数据库的基本信息 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.driver_class"</span>&gt;</span></span><br><span class="line">			com.mysql.cj.jdbc.Driver</span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.url"</span>&gt;</span></span><br><span class="line">			jdbc:mysql://Ip:Port/DatabaseName?serverTimezone=TimeZone</span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.username"</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.password"</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置c3p0连接池 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 初始化连接数量 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"c3p0.max_size"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 最小连接数量 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"c3p0.min_size"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 连接池中最大允许多少个语句对象 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"c3p0.max_statements"</span>&gt;</span>100<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 空闲连接检测间隔 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"c3p0.idle_test_period"</span>&gt;</span>3000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 最长等待时间,超时时间 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"c3p0.timeout"</span>&gt;</span>5000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 连接池扩容步长 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"c3p0.acquire_increment"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 开启二级缓存 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cache.use_second_level_cache"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 指定缓存供应商 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cache.region.factory_class"</span>&gt;</span></span><br><span class="line">			org.hibernate.cache.ehcache.EhCacheRegionFactory</span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 开启查询缓存 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cache.use_query_cache"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 配置数据库方言 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dialect"</span>&gt;</span></span><br><span class="line">			org.hibernate.dialect.MySQLDialect</span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 显示SQL语句 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"show_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 格式化SQL语句 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"format_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 开启自动生成DDL语句 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hbm2ddl.auto"</span>&gt;</span>update<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 批处理 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.jdbc.batch_size"</span>&gt;</span>50<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 映射目标实体类 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mapping</span> <span class="attr">class</span>=<span class="string">"packageName.EntityClass"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



</li>
</ul>
<ul>
<li><p>现在有了SpringBoot如何连接数据库？</p>
<ul>
<li><p>首先在本地或服务器上建立数据库</p>
</li>
<li><p>进入<strong>IDEA</strong>，创建一个基于<code>maven</code>的<strong>Spring-Boot</strong>项目</p>
</li>
<li><p>在<code>pom.xml</code>中导入一下依赖</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">   <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">       Persit data in SQL stores with Java Persistence API </span></span><br><span class="line"><span class="comment">       using Spring Data and Hibernate</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">	MySql JDBC and R2DBC driver</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
</li>
<li><p>在配置文件中输入数据库地址，用户名和密码就好了</p>
</li>
</ul>
<ul>
<li><p><code>application.properties</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据源 配置 (DataSourceAutoConfiguration &amp; DataSourceProperties)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span> = <span class="string">#JDBC驱动程序的完全限定名称。默认情况下，根据URL自动检测</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.datasource.name</span> =  <span class="string">#数据源的名称</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.datasource.password</span> = <span class="string">#登录数据库的密码</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.datasource.url</span> = <span class="string">#数据库的JDBC url</span></span><br></pre></td></tr></table></figure></div>
</li>
<li><p><code>application.yml</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment">#数据库的JDBC url</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://Ip:Port/DatabaseName?serverTimezone=TimeZone</span></span><br><span class="line">    <span class="comment">#JDBC驱动程序的完全限定名称。默认情况下，根据URL自动检测</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="comment">#数据源的名称</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="comment">#登录数据库的密码</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br></pre></td></tr></table></figure></div>








</li>
</ul>
</li>
</ul>
<h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.*;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.Cache;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**商品实体类*/</span></span><br><span class="line"><span class="comment">//lombok自动产生get&amp;set方法,构造方法等方法</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="comment">//表示该类是一个实体类,对应一张数据库的表</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"item_demo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Item</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="meta">@Column</span>(name = id)</span><br><span class="line">    <span class="keyword">private</span> Long id;<span class="comment">//商品编号,对应数据库的id</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Column</span>(name = picture)</span><br><span class="line">    <span class="keyword">private</span> String picture;<span class="comment">//商品图片路径,对应数据库</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Column</span>(name = name)</span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//商品名称,对应数据库</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Column</span>(name = price)</span><br><span class="line">    <span class="keyword">private</span> Double price;<span class="comment">//商品价格,对应数据库</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



]]></content>
      <tags>
        <tag>Spring-Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-Boot 摸索之路-0</title>
    <url>/2020/01/22/Spring-Boot-%E6%91%B8%E7%B4%A2%E4%B9%8B%E8%B7%AF-0/</url>
    <content><![CDATA[<blockquote>
<p>对Spring-Boot 学习过程的复现，记录中间遇到的Bug。</p>
</blockquote>
<a id="more"></a>

<p>[toc]</p>
<h1 id="Spring-Boot-如何开始"><a href="#Spring-Boot-如何开始" class="headerlink" title="Spring_Boot 如何开始"></a>Spring_Boot 如何开始</h1><h2 id="1、Spring-Boot"><a href="#1、Spring-Boot" class="headerlink" title="1、Spring-Boot"></a>1、Spring-Boot</h2><p> Spring_Boot是一个简化Spring应用开发的框架；</p>
<p> Spring_Boot是整个Spring技术栈的大整合；</p>
<p> Spring_Boot是J2EE开发的一站式解决方案；</p>
<h2 id="2、微服务"><a href="#2、微服务" class="headerlink" title="2、微服务"></a>2、微服务</h2><p> 2014，martin fowler</p>
<p> 微服务：架构风格（服务微化）</p>
<p> 一个应用应该是一组小型服务；可以通过HTTP的方式进行互通；</p>
<p> 单体应用：ALL IN ONE</p>
<p> 微服务：每一个功能元素最终都是一个可独立替换和独立升级的软件单元；</p>
<h2 id="3、环境准备"><a href="#3、环境准备" class="headerlink" title="3、环境准备"></a>3、环境准备</h2><p>  –<strong>jdk1.8</strong>：java version <code>1.8.0_112</code>; Spring Boot 推荐jdk1.8及以上；</p>
<p>  –<strong>Apache Maven</strong> <code>3.6.3;</code></p>
<p>  –*<em>IntelliJ IDEA *</em><code>2019.3 </code>;</p>
<p>  –<strong>Spring_Boot</strong> <code>2.2.3.RELEASE</code>;</p>
<h3 id="Maven-配置"><a href="#Maven-配置" class="headerlink" title="Maven 配置"></a>Maven 配置</h3><p> <a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">下载maven</a></p>
<p>进入maven<code>ClassPath/conf/setting.xml</code></p>
<p>给<code>profiles</code>添加一下配置</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h3 id="IDE配置"><a href="#IDE配置" class="headerlink" title="IDE配置"></a>IDE配置</h3><h2 id="4、-创建第一个Maven工程"><a href="#4、-创建第一个Maven工程" class="headerlink" title="4、 创建第一个Maven工程"></a>4、 创建第一个Maven工程</h2><p>功能： </p>
<ul>
<li>给浏览器发送hello请求，服务器接受请求并处理，响应Hello World 字符串；</li>
</ul>
<ol>
<li><p>创建一个maven工程；</p>
</li>
<li><p>在<code>pom.xml</code>中导入想换的依赖</p>
</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ol start="3">
<li>编写一个主程序</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@SpringBootApplication</span> 来标注一个主程序类，说明这是一个Spring Boot应用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldMainApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Spring应用启动起来</span></span><br><span class="line">        SpringApplication.run(HelloWorldMainApplication<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>如果已经自动生成了主程序，可以直接夹如<code>@SpringBootApplication</code>注释来说明这是一个Spring Boot应用。</p>
<ol start="4">
<li>编写Conroller</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*加入Controller注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello World!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ol start="5">
<li>运行主程序测试</li>
</ol>
<p>运行一开始写的<code>HelloWorldMainApplication.java</code></p>
<p>在浏览器输入<code>localhost:8080/hello</code>看看浏览器是不是返还了String:<code>HelloWorld!</code></p>
<ol start="6">
<li>简化部署</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这个插件，可以将应用打包成一个可执行的jar包；--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>将这个应用打成jar包，直接使用java -jar的命令进行执行；</p>
<h2 id="5、Hello-World探究"><a href="#5、Hello-World探究" class="headerlink" title="5、Hello World探究"></a>5、Hello World探究</h2><h3 id="1、POM文件"><a href="#1、POM文件" class="headerlink" title="1、POM文件"></a>1、POM文件</h3><ol>
<li>父项目(parent)</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--他的父项目是--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../../spring-boot-dependencies<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--他来真正管理Spring Boot应用里面的所有依赖版本；--&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>Spring Boot的版本仲裁中心；</p>
<p>以后我们导入依赖默认是不需要写版本；（没有在dependencies里面管理的依赖自然需要声明版本号）</p>
<ol start="2">
<li>启动器(spring-boot-starter)</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><strong>spring-boot-starter</strong>-==web==：</p>
<p>​    spring-boot-starter：spring-boot场景启动器；帮我们导入了web模块正常运行所依赖的组件；</p>
<p>Spring Boot将所有的功能场景都抽取出来，做成一个个的starters（启动器），只需要在项目里面引入这些starter相关场景的所有依赖都会导入进来。要用什么功能就导入什么场景的启动器</p>
<h3 id="2、主程序类，主入口类"><a href="#2、主程序类，主入口类" class="headerlink" title="2、主程序类，主入口类"></a>2、主程序类，主入口类</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@SpringBootApplication</span> 来标注一个主程序类，说明这是一个Spring Boot应用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldMainApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Spring应用启动起来</span></span><br><span class="line">        SpringApplication.run(HelloWorldMainApplication<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>@SpringBootApplication:    Spring Boot应用标注在某个类上说明这个类是Spring-Boot的主配置类，Spring-Boot就应该运行这个类的main方法来启动Spring-Boot应用；</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.TYPE)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(excludeFilters = &#123;</span><br><span class="line">      <span class="meta">@Filter</span>(type = FilterType.CUSTOM, classes = TypeExcludeFilter<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line"><span class="class">      @<span class="title">Filter</span>(<span class="title">type</span> </span>= FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter<span class="class">.<span class="keyword">class</span>) &#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> @<span class="title">interface</span> <span class="title">SpringBootApplication</span> </span>&#123;</span><br></pre></td></tr></table></figure></div>

<p>@<strong>SpringBootConfiguration</strong>: Spring-Boot的配置类；</p>
<p>标注在某个类上，表示这是一个Spring Boot的配置类；</p>
<p>@<strong>Configuration</strong>: 标注在某个类上，标志这是一个配置类；</p>
<p>配置类 —-  配置文件；配置类也是容器中的一个组件；@Component</p>
<p>@<strong>EnableAutoConfiguration</strong>：开启自动配置功能；</p>
<p>以前我们需要配置的东西，Spring Boot帮我们自动配置；</p>
<p>@<strong>EnableAutoConfiguration</strong>告诉SpringBoot开启自动配置功能；这样自动配置才能生效；</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@AutoConfigurationPackage</span></span><br><span class="line"><span class="meta">@Import</span>(EnableAutoConfigurationImportSelector<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> @<span class="title">interface</span> <span class="title">EnableAutoConfiguration</span> </span>&#123;</span><br></pre></td></tr></table></figure></div>

<p>@<strong>AutoConfigurationPackage</strong>：自动配置包</p>
<p>@<strong>Import</strong>(AutoConfigurationPackages.Registrar.class)：</p>
<p>Spring的底层注解@Import，给容器中导入一个组件；导入的组件由AutoConfigurationPackages.Registrar.class；</p>
<p>将主配置类（@SpringBootApplication标注的类）的所在包及下面所有子包里面的所有组件扫描到Spring容器</p>
<p>@<strong>Import</strong>(EnableAutoConfigurationImportSelector.class)；</p>
<p>给容器中导入组件？</p>
<p><strong>EnableAutoConfigurationImportSelector</strong>：导入哪些组件的选择器；</p>
<p>将所有需要导入的组件以全类名的方式返回；这些组件就会被添加到容器中；</p>
<p>会给容器中导入非常多的自动配置类（xxxAutoConfiguration）；就是给容器中导入这个场景需要的所有组件，并配置好这些组件；    </p>
<p>有了自动配置类，免去了我们手动编写配置注入功能组件等的工作；</p>
<p><code>SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class,classLoader)</code>;</p>
<p><strong>Spring-Boot</strong>在启动的时候从类路径下的<code>META-INF/spring.factories</code>中获取<strong>EnableAutoConfiguration</strong>指定的值，将这些值作为自动配置类导入到容器中，自动配置类就生效，帮我们进行自动配置工作；</p>
<p>以前我们需要自己配置的东西，自动配置类都帮我们；</p>
<p>J2EE的整体整合解决方案和自动配置都在<code>spring-boot-autoconfigure-1.5.9.RELEASE.jar</code>；</p>
<h2 id="6、使用Spring-Initializer快速创建Spring-Boot项目"><a href="#6、使用Spring-Initializer快速创建Spring-Boot项目" class="headerlink" title="6、使用Spring Initializer快速创建Spring-Boot项目"></a>6、使用<strong>Spring Initializer</strong>快速创建<strong>Spring-Boot</strong>项目</h2><ul>
<li><p>IDEA：使用** <strong>Spring Initializer</strong>快速创建项目</p>
<p>​    <strong>IDE</strong>都支持使用Spring的项目创建向导快速创建一个<strong>Spring-Boot</strong>项目；</p>
<p>​    选择我们需要的模块；向导会联网创建<strong>Spring-Boot</strong>项目；</p>
<p>​    默认生成的<strong>Spring-Boot</strong>项目；</p>
</li>
<li><p>主程序已经生成好了，我们只需要我们自己的逻辑</p>
</li>
<li><p><strong>resources</strong>文件夹中目录结构</p>
<ul>
<li><strong>static</strong>：保存所有的静态资源:  <code>js</code>、<code>css</code>、<code>images</code>；</li>
<li><strong>templates</strong>：保存所有的模板页面；（Spring Boot默认jar包使用嵌入式的Tomcat，默认不支持JSP页面）；可以使用模板引擎（<code>freemarker</code>、<code>thymeleaf</code>）；</li>
<li><strong>application.properties</strong>：Spring Boot应用的配置文件；可以修改一些默认设置；</li>
</ul>
</li>
</ul>
<hr>
<p>Reference<br><a href="https://github.com/Allwayz" target="_blank" rel="noopener">Allwayz</a></p>
]]></content>
      <tags>
        <tag>Spring-Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Java Tools Classes</title>
    <url>/2020/01/12/Java-Tools-Classes/</url>
    <content><![CDATA[<blockquote>
<p>封装了一些常用Java操作方法,便于重复开发利用.</p>
</blockquote>
<a id="more"></a>

<p>[toc]</p>
<h1 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h1><p>Win10x64<br>JDK1.8<br>Intellij IDEA 2019.3.1</p>
<h1 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">│  README.md</span><br><span class="line">│</span><br><span class="line">└─src</span><br><span class="line">    └─evilp0s</span><br><span class="line">        │  [CharsetUtil.java](https:<span class="comment">//github.com/Allwayz/JavaToolClasses/blob/master/src/main/java/com/opslab/util/CharsetUtil.java)     //字符串相关的工具类</span></span><br><span class="line">        │  ClassUtil.java       <span class="comment">//Java Class与反射相关的一些工具类</span></span><br><span class="line">        │  ChinesUtil.java      <span class="comment">//中文相关的工具类</span></span><br><span class="line">        │  ConvertUtil.java     <span class="comment">//转换相关的工具类</span></span><br><span class="line">        │  DateUtil.java        <span class="comment">//日期时间相关的工具类</span></span><br><span class="line">        │  EmailUtil.java       <span class="comment">//Email相关的工具类</span></span><br><span class="line">        │  FilePathUtil.java    <span class="comment">//文件路径相关的工具类</span></span><br><span class="line">        │  FileUtil.java        <span class="comment">//文件相关的工具类</span></span><br><span class="line">        │  PrintUtil.java       <span class="comment">//打印相关的工具类</span></span><br><span class="line">        │  ProUtil.java         <span class="comment">//属性文件相关的工具类</span></span><br><span class="line">        │  RandomUtil.java      <span class="comment">//随机操作的相关的工具类</span></span><br><span class="line">        │  RegUtil.java         <span class="comment">//正则相关的工具类</span></span><br><span class="line">        │  SecUtil.java         <span class="comment">//安全相关的工具类</span></span><br><span class="line">        │  StreamUtil.java      <span class="comment">//Stream相关的工具类</span></span><br><span class="line">        │  StringUtil.java      <span class="comment">//字符串相关的工具类</span></span><br><span class="line">        │  SysUtil.java         <span class="comment">//系统相关的工具类</span></span><br><span class="line">        │  ValidUtil.java       <span class="comment">//字符串相关的工具类</span></span><br><span class="line">        │  WebUtil.java         <span class="comment">//Web相关的工具类</span></span><br><span class="line">        │  ZIPUtil.java         <span class="comment">//zip相关的工具类</span></span><br><span class="line">        │</span><br><span class="line">        ├─algorithmImpl <span class="comment">//一些算法的实现细节</span></span><br><span class="line">        │      cpDetector.java</span><br><span class="line">        │      FileEncodingUtil.java</span><br><span class="line">        │      FileImpl.java</span><br><span class="line">        │      FileReadImpl.java</span><br><span class="line">        │      FileTypeImpl.java</span><br><span class="line">        │      StringImpl.java</span><br><span class="line">        │</span><br><span class="line">        └─FTP <span class="comment">//FTP相关操作的封装</span></span><br><span class="line">                FileAttr.java</span><br><span class="line">                FTPConstant.java</span><br><span class="line">                FTPFactory.java</span><br><span class="line">                FTPLog.java</span><br><span class="line">                FTPtest.java</span><br><span class="line">                FTPUtil.java</span><br><span class="line">                FTPUtilImpl.java</span><br><span class="line">                FTPVo.java</span><br><span class="line">                FunctionSet.java</span><br></pre></td></tr></table></figure></div>



<h1 id="APIDOC"><a href="#APIDOC" class="headerlink" title="APIDOC"></a>APIDOC</h1><h1 id="CharsetUtil字符串相关的工具类"><a href="#CharsetUtil字符串相关的工具类" class="headerlink" title="CharsetUtil字符串相关的工具类"></a>CharsetUtil字符串相关的工具类</h1><h2 id="常量字段"><a href="#常量字段" class="headerlink" title="常量字段"></a>常量字段</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> java.lang.String    GBK             <span class="comment">//中文超大字符集</span></span><br><span class="line"><span class="keyword">static</span> java.lang.String    ISO_8859_1      <span class="comment">//ISO 拉丁字母表 No.1，也叫作 ISO-LATIN-1</span></span><br><span class="line"><span class="keyword">static</span> java.lang.String    US_ASCII        <span class="comment">//7位ASCII字符，也叫作ISO646-US、Unicode字符集的基本拉丁块</span></span><br><span class="line"><span class="keyword">static</span> java.lang.String    UTF_16          <span class="comment">//16 位 UCS 转换格式，字节顺序由可选的字节顺序标记来标识</span></span><br><span class="line"><span class="keyword">static</span> java.lang.String    UTF_16BE        <span class="comment">//16 位 UCS 转换格式，Big Endian（最低地址存放高位字节）字节顺序</span></span><br><span class="line"><span class="keyword">static</span> java.lang.String    UTF_16LE        <span class="comment">//16 位 UCS 转换格式，Little-endian（最高地址存放低位字节）字节顺序</span></span><br><span class="line"><span class="keyword">static</span> java.lang.String    UTF_8           <span class="comment">//8 位 UCS 转换格式</span></span><br></pre></td></tr></table></figure></div>

<h2 id="常量方法"><a href="#常量方法" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> java.lang.<span class="function">String    <span class="title">changeCharset</span><span class="params">(java.lang.String str, java.lang.String newCharset)</span></span></span><br><span class="line"><span class="function"><span class="comment">//字符串编码转换的实现方法</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">changeCharset</span><span class="params">(java.lang.String str, java.lang.String oldCharset, java.lang.String newCharset)</span></span></span><br><span class="line"><span class="function"><span class="comment">//字符串编码转换的实现方法</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">toASCII</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将字符编码转换成US-ASCII码</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">toGBK</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将字符编码转换成GBK码</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">toISO_8859_1</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将字符编码转换成ISO-8859-1码</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">toUTF_16</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将字符编码转换成UTF-16码</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">toUTF_16BE</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将字符编码转换成UTF-16BE码</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">toUTF_16LE</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将字符编码转换成UTF-16LE码</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">toUTF_8</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将字符编码转换成UTF-8码</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="ClassUtil-Class与反射相关的一些工具类"><a href="#ClassUtil-Class与反射相关的一些工具类" class="headerlink" title="ClassUtil-Class与反射相关的一些工具类"></a>ClassUtil-Class与反射相关的一些工具类</h1><h2 id="常量方法-1"><a href="#常量方法-1" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> java.util.List&lt;java.lang.String&gt;    getClassName(java.lang.String packageName, <span class="keyword">boolean</span> childPackage)</span><br><span class="line"><span class="keyword">static</span> java.lang.String[]  getField(java.lang.String className)</span><br><span class="line"><span class="comment">//获取指定类的全部属性字段</span></span><br><span class="line"><span class="keyword">static</span> java.lang.String[]  getMethod(java.lang.String className)</span><br><span class="line"><span class="comment">//获取对象的全部方法</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">getter</span><span class="params">(java.lang.Object obj, java.lang.String att)</span></span></span><br><span class="line"><span class="function">调用对象的getter方法</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">initStr</span><span class="params">(java.lang.String old)</span></span></span><br><span class="line"><span class="function">java.lang.Class    <span class="title">loadClass</span><span class="params">(java.lang.String className)</span></span></span><br><span class="line"><span class="function"><span class="comment">//加载指定的类</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> &lt;T&gt; T   <span class="title">propertiesCopy</span><span class="params">(java.lang.Object obj, java.lang.Class&lt;T&gt; type)</span></span></span><br><span class="line"><span class="function"><span class="comment">//同名属性值复制 将对象obj内属性名同类型T内容有同名属性的值复制到类型T中，并返回一个类型T的对象</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> &lt;T&gt; T   <span class="title">propertiesCopyIgnore</span><span class="params">(java.lang.Object obj, java.lang.Class&lt;T&gt; type)</span></span></span><br><span class="line"><span class="function"><span class="comment">//同名属性值复制（忽略大小写） 将对象obj内属性名同类型T内容有同名属性的值复制到类型T中，并返回一个类型T的对象</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> &lt;T&gt; T   <span class="title">propertiesCopyIgnoreFilter</span><span class="params">(java.lang.Object obj, java.lang.Class&lt;T&gt; type, java.lang.String IgnoreStr)</span></span></span><br><span class="line"><span class="function"><span class="comment">//同名属性值复制（比较时忽略字符IgnoreStr的内容） 将对象obj内属性名同类型T内容有同名属性的值复制到类型T中，并返回一个类型T的对象</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">setter</span><span class="params">(java.lang.Object obj, java.lang.String att, java.lang.Object value, java.lang.Class&lt;?&gt; type)</span></span></span><br><span class="line"><span class="function"><span class="comment">//调用对象的setter方法</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="ChinesUtil中文相关的工具类"><a href="#ChinesUtil中文相关的工具类" class="headerlink" title="ChinesUtil中文相关的工具类"></a>ChinesUtil中文相关的工具类</h1><h2 id="常量方法-2"><a href="#常量方法-2" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> java.lang.<span class="function">String    <span class="title">getFirstSpell</span><span class="params">(java.lang.String chinese)</span></span></span><br><span class="line"><span class="function">获取汉字串拼音首字母，英文字符不变</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">getFullSpell</span><span class="params">(java.lang.String chinese)</span></span></span><br><span class="line"><span class="function">获取汉字串拼音，英文字符不变</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">getPingYin</span><span class="params">(java.lang.String inputString)</span></span></span><br><span class="line"><span class="function">将字符串中的中文转化为拼音,其他字符不变</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isChinese</span><span class="params">(java.lang.String strName)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isChineseByName</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isChineseByREG</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">main</span><span class="params">(java.lang.String[] args)</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="ConvertUtil转换相关的工具类"><a href="#ConvertUtil转换相关的工具类" class="headerlink" title="ConvertUtil转换相关的工具类"></a>ConvertUtil转换相关的工具类</h1><h2 id="常量方法-3"><a href="#常量方法-3" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bytesToInt</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span>    <span class="title">byteToLong</span><span class="params">(<span class="keyword">byte</span>[] b)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">short</span>   <span class="title">byteToShort</span><span class="params">(<span class="keyword">byte</span>[] b)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">byte</span>[]  <span class="title">intToByte</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">byte</span>[]  <span class="title">longToByte</span><span class="params">(<span class="keyword">long</span> number)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">byte</span>[]  <span class="title">shortToByte</span><span class="params">(<span class="keyword">short</span> number)</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="DateUtil日期时间相关的工具类"><a href="#DateUtil日期时间相关的工具类" class="headerlink" title="DateUtil日期时间相关的工具类"></a>DateUtil日期时间相关的工具类</h1><h2 id="常量方法-4"><a href="#常量方法-4" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> java.util.<span class="function">Date  <span class="title">calculate</span><span class="params">(java.util.Date date, <span class="keyword">int</span> second, java.lang.String timeBurst)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间Date在时间段(例如每天的08:00-18:00)上增加或减去second秒</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">calculate</span><span class="params">(java.lang.String date, <span class="keyword">int</span> second, java.lang.String timeBurst)</span><span class="comment">//</span></span></span><br><span class="line"><span class="function">时间Date在时间段<span class="params">(例如每天的<span class="number">08</span>:<span class="number">00</span><span class="number">-18</span>:<span class="number">00</span>)</span>上增加或减去second秒</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">Date</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取当前的日期</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">Date</span><span class="params">(java.util.Date date)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将指定的时间格式化成出返回</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">Date</span><span class="params">(java.lang.String dateStr)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将指定的字符串解析为时间类型</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">DateTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取当前日期时间</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">DateTime</span><span class="params">(java.util.Date date)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将指定的时间格式化成出返回</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">DateTime</span><span class="params">(java.lang.String datestr)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将指定的字符串解析为时间类型</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">day</span><span class="params">(java.util.Date date, <span class="keyword">int</span> day)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在指定的时间上加或减去几天</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">day</span><span class="params">(<span class="keyword">int</span> day)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在当前时间的基础上加或减去几天</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">hour</span><span class="params">(java.util.Date date, <span class="keyword">float</span> hour)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在制定的时间上加或减去几小时-支持浮点数</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">hour</span><span class="params">(<span class="keyword">float</span> hour)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在当前时间的基础上加或减去几小时-支持浮点数</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isDate</span><span class="params">(java.lang.String date)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断字符串是否为日期字符串</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">Minute</span><span class="params">(java.util.Date date, <span class="keyword">int</span> minute)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在制定的时间上加或减去几分钟</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">Minute</span><span class="params">(<span class="keyword">int</span> minute)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在当前时间的基础上加或减去几分钟</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">month</span><span class="params">(java.util.Date date, <span class="keyword">int</span> month)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在指定的时间上加或减去几月</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">month</span><span class="params">(<span class="keyword">int</span> month)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在当前时间的基础上加或减去几月</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">subDay</span><span class="params">(java.util.Date startTime, java.util.Date endTime)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取俩个时间之前的相隔的天数</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">subDay</span><span class="params">(java.lang.String startTime, java.lang.String endTime)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取俩个时间之前的相隔的天数</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span>    <span class="title">subtimeBurst</span><span class="params">(java.util.Date startDate, java.util.Date endDate, java.lang.String timeBurst)</span></span></span><br><span class="line"><span class="function"><span class="comment">//返回俩个时间在时间段(例如每天的08:00-18:00)的时长-单位秒</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span>    <span class="title">subtimeBurst</span><span class="params">(java.lang.String startDate, java.lang.String endDate, java.lang.String timeBurst)</span></span></span><br><span class="line"><span class="function"><span class="comment">//返回俩个时间在时间段(例如每天的08:00-18:00)的时长-单位秒</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span>    <span class="title">Subtract</span><span class="params">(java.util.Date date1, java.util.Date date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差-单位秒</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span>    <span class="title">Subtract</span><span class="params">(java.lang.String date1, java.lang.String date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差-单位秒</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">SubtractDate</span><span class="params">(java.lang.String date1, java.lang.String date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取俩个时间的查结果用时秒表示</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">SubtractDay</span><span class="params">(java.util.Date date1, java.util.Date date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差-单位天</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">SubtractDay</span><span class="params">(java.lang.String date1, java.lang.String date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差-单位天</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">SubtractHour</span><span class="params">(java.util.Date date1, java.util.Date date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差-单位小时</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">SubtractHour</span><span class="params">(java.lang.String date1, java.lang.String date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差-单位小时</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">SubtractMinute</span><span class="params">(java.util.Date date1, java.util.Date date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差-单位分钟</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">SubtractMinute</span><span class="params">(java.lang.String date1, java.lang.String date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差 -单位分钟</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">SubtractMonth</span><span class="params">(java.util.Date date1, java.util.Date date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差-单位月</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">SubtractMonth</span><span class="params">(java.lang.String date1, java.lang.String date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差-单位月</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">SubtractTime</span><span class="params">(java.lang.String date1, java.lang.String date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取俩个时间的查结果用时秒表示</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">SubtractYear</span><span class="params">(java.util.Date date1, java.util.Date date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差-单位年</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">SubtractYear</span><span class="params">(java.lang.String date1, java.lang.String date2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//时间date1和date2的时间差-单位年</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">Time</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取当前的时间</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">Time</span><span class="params">(java.util.Date date)</span></span></span><br><span class="line"><span class="function"><span class="comment">//讲指定的时间格式化成出返回</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">Time</span><span class="params">(java.lang.String dateStr)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将指定的字符串解析为时间类型</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">year</span><span class="params">(java.util.Date date, <span class="keyword">int</span> year)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在指定的时间上加或减去几年</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">year</span><span class="params">(<span class="keyword">int</span> year)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在当前时间的基础上加或减去year年</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="EmailUtilEmail相关的工具类"><a href="#EmailUtilEmail相关的工具类" class="headerlink" title="EmailUtilEmail相关的工具类"></a>EmailUtilEmail相关的工具类</h1><h2 id="常量方法-5"><a href="#常量方法-5" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span>   <span class="title">doSendHtmlEmail</span><span class="params">(java.lang.String subject, java.lang.String sendHtml, java.lang.String receiveUser)</span></span></span><br><span class="line"><span class="function"><span class="comment">//发送邮件</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span>   <span class="title">doSendHtmlEmail</span><span class="params">(java.lang.String subject, java.lang.String sendHtml, java.lang.String receiveUser, java.io.File attachment)</span></span></span><br><span class="line"><span class="function"><span class="comment">//发送邮件</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="FilePathUtil文件路径相关的工具类"><a href="#FilePathUtil文件路径相关的工具类" class="headerlink" title="FilePathUtil文件路径相关的工具类"></a>FilePathUtil文件路径相关的工具类</h1><h2 id="常量方法-6"><a href="#常量方法-6" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> java.lang.<span class="function">String    <span class="title">commandPath</span><span class="params">(java.lang.String file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//返回一个通用的文件路径</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">getParentPath</span><span class="params">(java.lang.String file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//返回相一个目录的对于本身的相对父目录</span></span></span><br></pre></td></tr></table></figure></div>

<h1 id="FileUtil文件相关的工具类"><a href="#FileUtil文件相关的工具类" class="headerlink" title="FileUtil文件相关的工具类"></a>FileUtil文件相关的工具类</h1><h2 id="常量方法-7"><a href="#常量方法-7" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">appendLine</span><span class="params">(java.io.File file, java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在文件末尾追加一行</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">cleanFile</span><span class="params">(java.io.File file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//快速清空一个超大的文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">copy</span><span class="params">(java.io.File file, java.lang.String targetFile)</span></span></span><br><span class="line"><span class="function"><span class="comment">//复制文件 通过该方式复制文件文件越大速度越是明显</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">copy</span><span class="params">(java.lang.String resourcePath, java.lang.String targetPath)</span></span></span><br><span class="line"><span class="function"><span class="comment">//复制文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">copyDir</span><span class="params">(java.io.File filePath, java.lang.String targetPath)</span></span></span><br><span class="line"><span class="function"><span class="comment">//复制目录</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">copyDir</span><span class="params">(java.lang.String filePath, java.lang.String targetPath)</span></span></span><br><span class="line"><span class="function"><span class="comment">//复制目录</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">countLines</span><span class="params">(java.io.File file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取文件的行数</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">cpdetector</span><span class="params">(java.io.File file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取文件的编码(cpDetector)探测</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">createFiles</span><span class="params">(java.lang.String filePaht)</span></span></span><br><span class="line"><span class="function"><span class="comment">//创建文件支持多级目录</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">createPaths</span><span class="params">(java.lang.String paths)</span></span></span><br><span class="line"><span class="function"><span class="comment">//创建多级目录</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteBigFile</span><span class="params">(java.io.File file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//快速的删除超大的文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteDir</span><span class="params">(java.io.File file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//删除一个目录</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteFile</span><span class="params">(java.io.File file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//删除一个文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">FileType</span><span class="params">(java.io.File file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取文件的类型</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">hash</span><span class="params">(java.io.File file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取文件的Hash</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.List&lt;java.lang.String&gt;    <span class="title">Lines</span><span class="params">(java.io.File file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//以列表的方式获取文件的所有行</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.List&lt;java.lang.String&gt;    <span class="title">Lines</span><span class="params">(java.io.File file, <span class="keyword">int</span> lines)</span></span></span><br><span class="line"><span class="function"><span class="comment">//以列表的方式获取文件的指定的行数数据</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.List&lt;java.io.File&gt;    <span class="title">listFile</span><span class="params">(java.io.File path)</span></span></span><br><span class="line"><span class="function"><span class="comment">//罗列指定路径下的全部文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.List&lt;java.io.File&gt;    <span class="title">listFile</span><span class="params">(java.lang.String path)</span></span></span><br><span class="line"><span class="function"><span class="comment">//罗列指定路径下的全部文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.List&lt;java.io.File&gt;    <span class="title">listFileAll</span><span class="params">(java.io.File path)</span></span></span><br><span class="line"><span class="function"><span class="comment">//罗列指定路径下的全部文件包括文件夹</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.List&lt;java.io.File&gt;    <span class="title">listFileFilter</span><span class="params">(java.io.File dirPath, java.lang.String postfixs)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取指定目录下的特点文件,通过后缀名过滤</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">MimeType</span><span class="params">(java.lang.String file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取文件的Mime类型</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Date  <span class="title">modifyTime</span><span class="params">(java.io.File file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取文件最后的修改时间</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.List&lt;java.io.File&gt;    <span class="title">searchFile</span><span class="params">(java.io.File dirPath, java.lang.String fileName)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在指定的目录下搜寻文个文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.List&lt;java.io.File&gt;    <span class="title">searchFileReg</span><span class="params">(java.io.File dirPath, java.lang.String reg)</span></span></span><br><span class="line"><span class="function"><span class="comment">//查找符合正则表达式reg的的文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">SimpleEncoding</span><span class="params">(java.lang.String file)</span></span></span><br><span class="line"><span class="function"><span class="comment">//利用简单的文件头字节特征探测文件编码</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="PrintUtil打印相关的工具类"><a href="#PrintUtil打印相关的工具类" class="headerlink" title="PrintUtil打印相关的工具类"></a>PrintUtil打印相关的工具类</h1><h2 id="常量方法-8"><a href="#常量方法-8" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">print</span><span class="params">(java.util.Enumeration enums)</span></span></span><br><span class="line"><span class="function"><span class="comment">//遍历打印Enumeration</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">print</span><span class="params">(java.util.List&lt;?&gt; list)</span></span></span><br><span class="line"><span class="function"><span class="comment">//遍历打印遍历List集合</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">print</span><span class="params">(java.util.Map map)</span></span></span><br><span class="line"><span class="function"><span class="comment">//遍历打印Map集合</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">print</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">println</span><span class="params">(java.lang.Object obj)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">println</span><span class="params">(java.lang.String str)</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="ProUtil属性文件相关的工具类"><a href="#ProUtil属性文件相关的工具类" class="headerlink" title="ProUtil属性文件相关的工具类"></a>ProUtil属性文件相关的工具类</h1><h2 id="常量方法-9"><a href="#常量方法-9" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> java.lang.<span class="function">String    <span class="title">GetAllProperties</span><span class="params">(java.lang.String filePath)</span></span></span><br><span class="line"><span class="function"><span class="comment">//读取Properties的全部信息</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">GetValueByKey</span><span class="params">(java.lang.String filePath, java.lang.String key)</span></span></span><br><span class="line"><span class="function"><span class="comment">//根据Key读取Value</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">key</span><span class="params">(java.lang.String key)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">WriteProperties</span><span class="params">(java.lang.String filePath, java.lang.String pKey, java.lang.String pValue)</span></span></span><br><span class="line"><span class="function"><span class="comment">//写入Properties信息</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="RandomUtil随机操作的相关的工具类"><a href="#RandomUtil随机操作的相关的工具类" class="headerlink" title="RandomUtil随机操作的相关的工具类"></a>RandomUtil随机操作的相关的工具类</h1><h2 id="常量方法-10"><a href="#常量方法-10" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getNotSimple</span><span class="params">(<span class="keyword">int</span>[] param, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"><span class="comment">//每次生成的len位数都不相同</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">LowerString</span><span class="params">(<span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"><span class="comment">//返回一个定长的随机纯大写字母字符串(只包含大小写字母)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">MixString</span><span class="params">(<span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"><span class="comment">//返回一个定长的随机纯字母字符串(只包含大小写字母)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">number</span><span class="params">(<span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">String</span><span class="params">(<span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"><span class="comment">//返回一个定长的随机字符串(只包含大小写字母、数字)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">toFixdLengthString</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> fixdlenth)</span></span></span><br><span class="line"><span class="function"><span class="comment">//根据数字生成一个定长的字符串，长度不够前面补0</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">toFixdLengthString</span><span class="params">(<span class="keyword">long</span> num, <span class="keyword">int</span> fixdlenth)</span></span></span><br><span class="line"><span class="function"><span class="comment">//根据数字生成一个定长的字符串，长度不够前面补0</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">UpperString</span><span class="params">(<span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"><span class="comment">//返回一个定长的随机纯小写字母字符串(只包含大小写字母)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">ZeroString</span><span class="params">(<span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"><span class="comment">//生成一个定长的纯0字符串</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="RegUtil正则相关的工具类"><a href="#RegUtil正则相关的工具类" class="headerlink" title="RegUtil正则相关的工具类"></a>RegUtil正则相关的工具类</h1><h2 id="常量方法-11"><a href="#常量方法-11" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isMatche</span><span class="params">(java.lang.String str, java.lang.String reg)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断字符串str是否符合正则表达式reg</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="SecUtil安全相关的工具类"><a href="#SecUtil安全相关的工具类" class="headerlink" title="SecUtil安全相关的工具类"></a>SecUtil安全相关的工具类</h1><h2 id="常量方法-12"><a href="#常量方法-12" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> java.lang.<span class="function">String    <span class="title">FileMD5</span><span class="params">(java.io.File file)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">md5</span><span class="params">(java.lang.String password)</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="StreamUtil-Stream相关的工具类"><a href="#StreamUtil-Stream相关的工具类" class="headerlink" title="StreamUtil-Stream相关的工具类"></a>StreamUtil-Stream相关的工具类</h1><h2 id="常量方法-13"><a href="#常量方法-13" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> java.io.<span class="function">InputStream <span class="title">byte2InputStream</span><span class="params">(<span class="keyword">byte</span>[] b)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">byte</span>[]  <span class="title">inputStream2Byte</span><span class="params">(java.io.InputStream inStream)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">byte</span>[]  <span class="title">stream2Byte</span><span class="params">(java.io.InputStream is)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">streamSaveAsFile</span><span class="params">(java.io.InputStream is, java.io.File outfile)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将流另存为文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String <span class="title">streamToString</span><span class="params">(java.io.InputStream in)</span></span></span><br><span class="line"><span class="function"><span class="comment">//Read an input stream into a string</span></span></span><br></pre></td></tr></table></figure></div>

<h1 id="StringUtil字符串相关的工具类"><a href="#StringUtil字符串相关的工具类" class="headerlink" title="StringUtil字符串相关的工具类"></a>StringUtil字符串相关的工具类</h1><h2 id="常量方法-14"><a href="#常量方法-14" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">ChineseLength</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取一个字符串中中文字符的个数</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">countSubStr</span><span class="params">(java.lang.String string, java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取字符串str在String中出现的次数</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">countSubStrReg</span><span class="params">(java.lang.String string, java.lang.String reg)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取符合reg正则表达式的字符串在String中出现的此时</span></span></span><br><span class="line"><span class="function">java.lang.String   <span class="title">cpDetector</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取字符串的编码</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">formatFloat</span><span class="params">(<span class="keyword">float</span> f, java.lang.String format)</span></span></span><br><span class="line"><span class="function"><span class="comment">//格式化一个float</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">full2Half</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//全角字符变半角字符</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">GBToUnicode</span><span class="params">(java.lang.String input)</span></span></span><br><span class="line"><span class="function"><span class="comment">//GBK转换成Unicode字符集</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">getHideEmailPrefix</span><span class="params">(java.lang.String email)</span></span></span><br><span class="line"><span class="function"><span class="comment">//隐藏邮件地址前缀。</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">getLimitLengthString</span><span class="params">(java.lang.String str, <span class="keyword">int</span> len, java.lang.String symbol)</span></span></span><br><span class="line"><span class="function"><span class="comment">//截取字符串　超出的字符用symbol代替</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getStringLen</span><span class="params">(java.lang.String SrcStr)</span></span></span><br><span class="line"><span class="function"><span class="comment">//取得字符串的实际长度（考虑了汉字的情况）</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">html</span><span class="params">(java.lang.String content)</span></span></span><br><span class="line"><span class="function"><span class="comment">//HTML标签转义方法 —— java代码库</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isABC</span><span class="params">(java.lang.String src)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断是否纯字母组合</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isChinese</span><span class="params">(<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断是否是中文</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isChinese</span><span class="params">(java.lang.String strName)</span></span></span><br><span class="line"><span class="function"><span class="comment">//完整的判断中文汉字和符号</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isEmail</span><span class="params">(java.lang.String email)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">(java.lang.String s)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断是否是空字符串 null和"" 都返回 true</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isFloatNumeric</span><span class="params">(java.lang.String src)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断是否浮点数字表示</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isIn</span><span class="params">(java.lang.String substring, java.lang.String[] source)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断字符串数组中是否包含某字符串元素</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isInteger</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isMessyCode</span><span class="params">(java.lang.String strName)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断是否是乱码</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isNumeric</span><span class="params">(java.lang.String src)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断是否数字表示</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isNumericString</span><span class="params">(java.lang.String src)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断是否数字表示</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">joinString</span><span class="params">(java.util.List array, java.lang.String symbol)</span></span></span><br><span class="line"><span class="function"><span class="comment">//把string array or list用给定的符号symbol连接成一个字符串</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">joinString</span><span class="params">(java.lang.String[] array, java.lang.String symbol)</span></span></span><br><span class="line"><span class="function"><span class="comment">//把string array or list用给定的符号symbol连接成一个字符串</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">left</span><span class="params">(java.lang.String input, <span class="keyword">int</span> count)</span></span></span><br><span class="line"><span class="function"><span class="comment">//截取字符串左侧指定长度的字符串</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">listToStringSlipStr</span><span class="params">(java.util.List list, java.lang.String slipStr)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将list 用传入的分隔符组装为String</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">middle</span><span class="params">(java.lang.String input, <span class="keyword">int</span> index, <span class="keyword">int</span> count)</span></span></span><br><span class="line"><span class="function"><span class="comment">//从指定位置开始截取指定长度的字符串</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.Map&lt;java.lang.String,java.lang.String&gt;    <span class="title">parseQuery</span><span class="params">(java.lang.String query, <span class="keyword">char</span> split1, <span class="keyword">char</span> split2, java.lang.String dupLink)</span></span></span><br><span class="line"><span class="function"><span class="comment">//解析字符串返回map键值对(例：a=1&amp;b=2 =&gt; a=1,b=2)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.util.List&lt;java.lang.String&gt;    <span class="title">parseString2ListByCustomerPattern</span><span class="params">(java.lang.String pattern, java.lang.String src)</span></span></span><br><span class="line"><span class="function"><span class="comment">//根据指定的字符把源字符串分割成一个数组</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">repeat</span><span class="params">(java.lang.String src, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"><span class="comment">//repeat - 通过源字符串重复生成N次组成新的字符串。</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">replaceAll</span><span class="params">(java.lang.String s, java.lang.String sf, java.lang.String sb)</span></span></span><br><span class="line"><span class="function"><span class="comment">//存文本替换</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">replaceBlank</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//页面中去除字符串中的空格、回车、换行符、制表符</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">replaceBracketStr</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//全角括号转为半角</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">requals</span><span class="params">(java.lang.String str1, java.lang.String str2)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">right</span><span class="params">(java.lang.String input, <span class="keyword">int</span> count)</span></span></span><br><span class="line"><span class="function"><span class="comment">//截取字符串右侧指定长度的字符串</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">double</span>  <span class="title">SimilarDegree</span><span class="params">(java.lang.String str1, java.lang.String str2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//字符串相似度比较(速度较快)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">double</span>  <span class="title">SimilarityRatio</span><span class="params">(java.lang.String str1, java.lang.String str2)</span></span></span><br><span class="line"><span class="function"><span class="comment">//字符串相似度比较(速度较快)</span></span></span><br><span class="line"><span class="function">java.lang.String   <span class="title">SimpleEncoding</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//获取字符串的编码</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">string2Unicode</span><span class="params">(java.lang.String string)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">subStringNotEncode</span><span class="params">(java.lang.String subject, <span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"><span class="comment">//讲字符串截取到指定长度size+...的形式</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">subStrNotEncode</span><span class="params">(java.lang.String subject, <span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"><span class="comment">//截取字符，不转码</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">trimPunct</span><span class="params">(java.lang.String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">//删除所有的标点符号</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">unicode2String</span><span class="params">(java.lang.String unicode)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">UnicodeToGB</span><span class="params">(java.lang.String input)</span></span></span><br><span class="line"><span class="function"><span class="comment">//Unicode转换成GBK字符集</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="SysUtil系统相关的工具类"><a href="#SysUtil系统相关的工具类" class="headerlink" title="SysUtil系统相关的工具类"></a>SysUtil系统相关的工具类</h1><h2 id="常量字段-1"><a href="#常量字段-1" class="headerlink" title="常量字段"></a>常量字段</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> java.lang.String    STR_HOSTNAME</span><br><span class="line"><span class="keyword">static</span> java.lang.String    STR_IP</span><br></pre></td></tr></table></figure></div>

<h1 id="ValidUtil字符串相关的工具类"><a href="#ValidUtil字符串相关的工具类" class="headerlink" title="ValidUtil字符串相关的工具类"></a>ValidUtil字符串相关的工具类</h1><h2 id="常量方法-15"><a href="#常量方法-15" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(java.util.Collection col)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断集合的有效性</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(java.lang.Object obj)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断一个对象是否为空</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(java.lang.Object[] arr)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断数组是否有效</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(java.lang.String src)</span></span></span><br><span class="line"><span class="function"><span class="comment">//判断字符串有效性</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="WebUtilWeb相关的工具类"><a href="#WebUtilWeb相关的工具类" class="headerlink" title="WebUtilWeb相关的工具类"></a>WebUtilWeb相关的工具类</h1><h2 id="常量方法-16"><a href="#常量方法-16" class="headerlink" title="常量方法"></a>常量方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> java.lang.<span class="function">String    <span class="title">escape</span><span class="params">(java.lang.String src)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">getParamValue</span><span class="params">(java.lang.String url, java.lang.String paramName)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">main</span><span class="params">(java.lang.String[] args)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">print</span><span class="params">(javax.servlet.http.HttpServletRequest request)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">removeParam</span><span class="params">(java.lang.String url, java.lang.String... paramNames)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">removeParam</span><span class="params">(java.lang.String url, java.lang.String paramName)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">setParam</span><span class="params">(java.lang.String url, java.lang.String paramName, java.lang.String paramValue)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">unescape</span><span class="params">(java.lang.String src)</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> java.lang.String    <span class="title">urlJoin</span><span class="params">(java.net.URL url, java.lang.String locationHeader)</span></span></span><br></pre></td></tr></table></figure></div>


<h1 id="ZIPUtil-zip相关的工具类"><a href="#ZIPUtil-zip相关的工具类" class="headerlink" title="ZIPUtil-zip相关的工具类"></a>ZIPUtil-zip相关的工具类</h1><h2 id="常量方法-17"><a href="#常量方法-17" class="headerlink" title="常量方法"></a>常量方法</h2><pre><code class="java"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">deCompress</span><span class="params">(java.io.File file, java.lang.String dest)</span></span>
<span class="function"><span class="comment">//文档压缩</span></span>
<span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">unCompress</span><span class="params">(java.io.File source, java.lang.String path)</span></span>
<span class="function"><span class="comment">//文档解压</span></span>
<span class="function"><span class="keyword">static</span> <span class="keyword">void</span>    <span class="title">zipFile</span><span class="params">(java.io.File inFile, java.util.zip.ZipOutputStream zos, java.lang.String dir)</span></span></code></pre>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://github.com/allwayz" target="_blank" rel="noopener">Allwayz</a><br><a href="/download/JavaToolClasses.zip">点击此处，下载源码</a></p>
]]></content>
  </entry>
  <entry>
    <title>how to write a essay</title>
    <url>/2019/12/26/how-to-write-a-essay/</url>
    <content><![CDATA[<blockquote>
<p>Everone can write a paper, but how to write a good academic paper?</p>
</blockquote>
<a id="more"></a>

<table>
    <tbody>
        <tr>
            <td style="vertical-align: top" width="20%"><strong>目的</strong></td>
            <td style="vertical-align: top" width="30%"><strong>介绍</strong></td>
            <td style="vertical-align: top" width="50%"><strong>范文</strong></td>
        </tr>
        <tr>
            <td style="vertical-align: top" width="20%">stating information that is not “common knowledge”</td>
            <td style="vertical-align: top" width="30%">
                <ul>
                    <li>[use relevant style guide’s in-text citation format]</li>
                    <li>As [Author] indicated/ stated/ discovered</li>
                    <li>According to [Author],</li>
                </ul>
            </td>
            <td style="vertical-align: top" width="50%">
                <ul>
                    <li>As Smith indicated in a 2010 study . . .</li>
                    <li>According to Marks and Peters . . .</li>
                </ul>
            </td>
        </tr>
        <tr>
            <td style="vertical-align: top" width="20%">drawing conclusions, making inferences, or suggesting implications based on specific data</td>
            <td style="vertical-align: top" width="30%">
                <ul>
                    <li>suggests</li>
                    <li>as evidenced/ suggested/ indicated by</li>
                    <li>based on</li>
                    <li>can be seen/ observed when</li>
                    <li>as seen in</li>
                    <li>which is made apparent when</li>
                    <li>is demonstrated by/ through/ when</li>
                    <li>hinges on</li>
                </ul>
            </td>
            <td style="vertical-align: top" width="50%">
                <ul>
                    <li>The strong negative correlation suggests that . . .</li>
                    <li>As evidenced/ suggested/ indicated by their enlarged adrenal glands, patients with . . .</li>
                    <li>Based on self-reported survey results . . .</li>
                    <li>This phenomenon can be seen/ observed when wind speeds exceed . . .</li>
                    <li>As seen in the high recurrence rates of . . .</li>
                    <li>The causal link between A and B, which is made apparent when B triggers . . .</li>
                    <li>The efficacy of chocolate as a cure for unhappiness is demonstrated by survey results highlighted in . . .</li>
                    <li>This conclusion hinges on . . .</li>
                </ul>
            </td>
        </tr>
        <tr>
            <td style="vertical-align: top" width="20%">clarifying a prior statement</td>
            <td style="vertical-align: top" width="30%">
                <ul>
                    <li>for example</li>
                    <li>for instance</li>
                    <li>by way of illustration</li>
                    <li>as an example</li>
                    <li>to clarify</li>
                    <li>to explain further</li>
                    <li>namely</li>
                    <li>to be specific</li>
                    <li>that is,</li>
                    <li>in other words,</li>
                </ul>
            </td>
            <td style="vertical-align: top" width="50%">
                <ul>
                    <li>This occurrence is rare. For example, only one in twenty . . .</li>
                    <li>It is unlikely that current population growth rates are sustainable. For instance, several major coastal cities are already suffering from . . .</li>
                    <li>By way of illustration, less than 20% of new matriculants feel prepared for . . .</li>
                    <li>As an example, when a country faces economic recession, polls indicate that over 80% of the population supports . . .</li>
                    <li>To clarify, not all government-funded facilities provide . . .</li>
                    <li>To explain further, large doses of Agent O can trigger . . .</li>
                    <li>Millennials prefer flexible work conditions, namely the ability to work remotely.</li>
                    <li>To be specific, bull markets can . . .</li>
                    <li>That is, significant and sudden drops in temperature can . . .</li>
                    <li>In other words, short bursts of high-intensity ultrasound can . . .</li>
                </ul>
            </td>
        </tr>
        <tr>
            <td style="vertical-align: top" width="20%">identifying representative examples of a category</td>
            <td style="vertical-align: top" width="30%">
                <ul>
                    <li>for example/ instance</li>
                    <li>such as*</li>
                    <li>e.g.</li>
                    <li>one/ another example</li>
                    <li>like*</li>
                    <li>excluding</li>
                    <li>including</li>
                    <li>an example being</li>
                </ul>
                <p>*NOTE: “such as” and “like” have two different uses. “Such as” introduces a specific example that is part of a category. “Like” suggests the listed items are similar to, but not included in, the topic discussed.
            </td>
            <td style="vertical-align: top" width="50%">
                <ul>
                    <li>Typhoons are considered acts of God, for example/ instance.</li>
                    <li>The island is home to many native carnivorous plants, such as Venus flytraps.</li>
                    <li>The only known bioluminescent vertebrates are fish (e.g. the anglerfish and lantern fish).</li>
                    <li>One/ another example of this exception is . . .</li>
                    <li>I prefer outdoor sports like mountain climbing because they allow me to enjoy nature while exercising.</li>
                    <li>All mammals, excluding humans, stop drinking milk at a young age.</li>
                    <li>All stars, including our sun, . . .</li>
                    <li>Hawks feast on rodents, an example being . . .</li>
                </ul>
            </td>
        </tr>
        <tr>
            <td style="vertical-align: top" width="20%">distinguishing concepts</td>
            <td style="vertical-align: top" width="30%">
                <ul>
                    <li>in a similar case</li>
                    <li>unlike the case of</li>
                    <li>in the same way</li>
                    <li>as a case in point</li>
                    <li>in a typical situation</li>
                    <li>in a normal scenario</li>
                </ul>
            </td>
            <td style="vertical-align: top" width="50%">
                <ul>
                    <li>In a similar case, a male patient with arthritis . . .</li>
                    <li>Unlike a single-blind study, a double-blind study reduces the risk of observer bias.</li>
                    <li>Redundancy and wordiness can be reduced in the same way: through careful editing.</li>
                    <li>As a case in point, let&#8217;s look at the situation in which . . .</li>
                    <li>In a typical situation, marsupials would . . .</li>
                    <li>In a normal scenario, cortisol suppressant effects . . .</li>
                </ul>
            </td>
        </tr>
        <tr>
            <td style="vertical-align: top" width="20%">emphasizing a point by highlighting a specific situation</td>
            <td style="vertical-align: top" width="30%">
                <ul>
                    <li>for example</li>
                    <li>indeed</li>
                    <li>in fact</li>
                    <li>notably</li>
                    <li>markedly</li>
                    <li>as a case in point</li>
                </ul>
            </td>
            <td style="vertical-align: top" width="50%">
                <ul>
                    <li>Nocturnal marsupials, for example, have . . .</li>
                    <li>Indeed, since the World Health Organization declared an end to the Ebola outbreak in the Democratic Republic of the Congo . . .</li>
                    <li>Ice-free habitats around Antarctica, in fact, have . . .</li>
                    <li>High carbon steel alloys, notably, undergo a transformation when . . .</li>
                    <li>Markedly, the deserts irregular rainfall levels have . . .</li>
                    <li>As a case in point, the last known male northern white rhinoceros . . .</li>
                </ul>
            </td>
        </tr>
    </tbody>
</table>

]]></content>
  </entry>
  <entry>
    <title>个人博客搭建指南</title>
    <url>/2019/12/11/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<blockquote>
<p>市面上有很多博客框架和平台可以选择。 我这里选择的是Hexo的框架。</p>
</blockquote>
<a id="more"></a>


<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ul>
<li><a href="#node">安装 Node.js</a></li>
<li><a href="#cnpm">安装 cnpm</a></li>
<li><a href="#hexo">安装 Hexo</a></li>
<li><a href="#blogForder">创建博客文件夹</a></li>
<li><a href="#hexoInit">生成新博客</a></li>
<li><a href="#githubG">创建GitHub个人仓库</a></li>
<li><a href="#gitPlug">安装 Git</a></li>
<li><a href="#hexoD_Config">配置部署文件</a></li>
<li><a href="#hexoD">发布文章</a></li>
</ul>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>市面上有很多博客框架和平台可与选择这里选择的是Hexo的框架。<br>Hexo是基于Node.js进行开发博客平台，所以第一步是安装Node.js工具。</p>
<p><span id = "node">通过node的官方网址来下载工具。<a href="https://nodejs.org" target="_blank" rel="noopener">https://nodejs.org</a> </span><br>建议选择长期支持版（LTS)</p>
<p>安装的过程非常简单，跟着下一步一步一步走就可以了。</p>
<p>安装完成后会有两个组件分别是<strong>Node.js</strong>和<strong>npm</strong></p>
<p>想要确保node是否安装好 可以在命令行中输入 <code>node -v</code></p>
<p>同样可以用过<code>npm -v</code>来确认包管理器的版本</p>
<p>Windos系统： <kbd>Win</kbd> + <kbd>R</kbd> 运行cmd命令行</p>
<p>MacOS： <kbd>Command</kbd> + <kbd>Space</kbd> 运行Terminal</p>
<p>因为Hexo是基于Node.js来生成的所以准备步骤到这边已经可以了，接下来开始搭建博客框架。</p>
<h2 id="搭建方法"><a href="#搭建方法" class="headerlink" title="搭建方法"></a>搭建方法</h2><p><span id="cnpm">国内因为镜像源速度很慢，所以利用npm安装cnpm来加快安装速度。</span></p>
<pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></pre><p>跑完进度条之后可以查看cnpm版本。</p>
<pre><code>cnpm -v</code></pre><p><span id="hexo">接下来就利用cnpm来安装Hexo</span></p>
<pre><code>cnpm install -g hexo-cli</code></pre><p>跑完进度条之后验证是否安装好以及查一下版本号</p>
<pre><code>hexo -v</code></pre><hr>
<p>安装好了之后就可以去配置博客环境了。</p>
<p><span id="blogForder">先新建一个空文件夹，比如路径是：</span><br>        D:\Blog</p>
<p><span id="hexoInit">使用 &gt;_ cd 命令进入创建空文件夹的路径，然后使用hexo生成一个博客</span></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">cd D:\Blog &#x2F;&#x2F;进入文件夹</span><br><span class="line">Hexo init &#x2F;&#x2F;使用Hexo初始化博客</span><br></pre></td></tr></table></figure></div>
<p>现在已经可以使用这个博客了</p>
<pre><code>hexo s</code></pre><p>现在这个博客是跑在本地机器上的，端口默认是4000</p>
<p>进入浏览器输入 <a href="localhost:4000">localhost:4000</a> 就可以访问了。</p>
<ul>
<li>如何新建文章呢？</li>
</ul>
<pre><code>hexo new “博客名称”</code></pre><p>新的一篇博客默认路径是： <code>Blog/source/_posts/博客名称.md</code></p>
<p>通过cd来进入目录</p>
<p>博客文章编辑好之后需要生成一下hexo博客</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">hexo g &#x2F;&#x2F;重新生成博客</span><br></pre></td></tr></table></figure></div>

<h2 id="放入远端"><a href="#放入远端" class="headerlink" title="放入远端"></a>放入远端</h2><p>####我这里选择把博客部署到<code>GitHub</code>中去。</p>
<p><span id="githubG">在<code>GitHub</code>中新建一个储存库，名字命名为<code>UserName.github.io</code>。</span></p>
<p><strong>注意</strong>：这里明明的UserName一定是你<code>GitHub</code>的昵称。</p>
<p><span id="gitPlug">回到命令行安装git插件</span></p>
<pre><code>cnpm install -- save hexo-deployer-git //如果出现警告可以不用管</code></pre><p><span id="hexoD_Config">####这时候需要配置一下部署</span><br>打开 <code>Blog/_config.yml</code> 找到最底部的<code>Deployment</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># Deployment</span></span><br><span class="line"><span class="section">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">type:</span><br></pre></td></tr></table></figure></div>

<p><strong>更改为</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># Deployment</span></span><br><span class="line"><span class="section">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: //刚刚仓库的完整地址</span><br><span class="line">branch： master</span><br></pre></td></tr></table></figure></div>

<p><span id="hexoD">修改好<code>config</code>文件之后就可以部署到远端了。</span></p>
<pre><code>hexo d</code></pre><p>可能需要输入GitHub的账号和密码，输入就可以了。</p>
<p>直接把我们仓库的名字拿出来到浏览器中访问，个人博客的搭建就成功了。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总的来说没有遇到什么困难的地方，markdown语法有很强大的功能等待我去挖掘。有什么问题可以在底下给我留言。</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://github.com/allwayz" target="_blank" rel="noopener">Allwayz</a></p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
